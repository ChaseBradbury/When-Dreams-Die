function player_init(lvl) {
	switch(lvl) {
		case 1:
			player.startX = -40 * cellSize;
			player.startY = 4 * cellSize;
			break;
		case 2:
			player.startX = 2 * cellSize;
			player.startY = 12 * cellSize;
			break;
		case 3:
			player.startX = 20 * cellSize;
			player.startY = 26 * cellSize;
			break;
		case 4:
			player.startX = -3 * cellSize;
			player.startY = 16 * cellSize;
			break;
		case 5:
			player.startX = -2 * cellSize + oneOffsetX;
			player.startY = 30 * cellSize + oneOffsetY;
			break;
		case 6:
			player.startX = 2 * cellSize;
			player.startY = 12 * cellSize;
			break;
		case -1:
			player.startX = 2 * cellSize;
			player.startY = 40 * cellSize;
			break;
		case 7:
			player.startX = 2 * cellSize;
			player.startY = 26 * cellSize;
			break;
		case 8:
			player.startX = 2 * cellSize;
			player.startY = 30 * cellSize;
			break;
		case 9:
			player.startX = 2 * cellSize;
			player.startY = 25 * cellSize;
			break;
		case 10:
			player.startX = 40 * cellSize;
			player.startY = 11 * cellSize;
			break;
		case 11:
			player.startX = 7 * cellSize;
			player.startY = 25 * cellSize;
			break;
		case 12:
			player.startX = 2 * cellSize;
			player.startY = 36 * cellSize;
			break;
		case 13:
			player.startX = 3 * cellSize;
			player.startY = 20 * cellSize;
			break;
		case 14:
			player.startX = 2 * cellSize;
			player.startY = 12 * cellSize;
			break;
		case 15:
			player.startX = 3 * cellSize;
			player.startY = 12 * cellSize;
			break;
		case 0:
			player.startX = 6 * cellSize;
			player.startY = 18 * cellSize;
			break;
	}
	player.x = player.startX;
	player.y = player.startY;
	player.x = player.startX;
	player.y = player.startY;
	player.bottom = player.y + player.height;
	player.right = player.x + cellSize;
	player.dead = false;
}

function level_init(lvl) {
	receivers = [];
	platforms = [];
	ground = [];
	hazards = [];
	backgrounds = [];
	foregrounds = [];
    checkpoints = [];
	switch(lvl) {
		case 1:
			//First tutorial w/ just jumping
			//backgrounds.push(new Decoration(-, -20, .5, bg2, true));
			backgrounds.push(new Decoration(-40, -20, .2, bg2, true));
			backgrounds.push(new Decoration(-40, -20, .2, mg2, true));
			foregrounds.push(new Decoration(-14, -7, 1, poem1));
			foregrounds.push(new Decoration(37, -5, 1, poem2));
			//foregrounds.push(new Decoration(0, 7, 1, bio1));
			foregrounds.push(new Decoration(-31, -3, 1, left_arrow));
			foregrounds.push(new Decoration(-28, -3, 1, right_arrow));
			foregrounds.push(new Decoration(6, -4, 1, up_arrow));
			ground.push(new Ground(-70, 2, 20, 40));
			ground.push(new Ground(-50, 6, 57, 20));//
			ground.push(new Ground(7, 3, 3, 18));
			ground.push(new Ground(10, 0, 3, 25));
			ground.push(new Ground(13, 3, 1, 18));
			ground.push(new Ground(14, 6, 6, 15));
			ground.push(new Ground(20, 0, 5, 25));
			ground.push(new Ground(25, 3, 1, 18));
			ground.push(new Ground(26, 6, 6, 15));
			ground.push(new Ground(32, 0, 5, 21));
			ground.push(new Ground(37, 9, 15, 23));
			ground.push(new Ground(52, 6, 3, 18));
			ground.push(new Ground(55, 9, 3, 15));
			ground.push(new Ground(58, 3, 4, 21));
			ground.push(new Ground(62, 5, 3, 15));
			ground.push(new Ground(65, -2, 20, 25));
			foregrounds.push(new Decoration(-22, 9, 1, bio2));
			foregrounds.push(new Decoration(5, -10, 1, bio3));
			foregrounds.push(new Decoration(35, 12, 1, bio4));
			//hazards.push(new Hazard(-72, 50, 70, false));
			exit = new Exit(62, 4);
			break;
		case 2:
			backgrounds.push(new Decoration(-15, -20, .5, bg2, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg2, true));
			//Binary normal switch tutuorial
			foregrounds.push(new Decoration(-14, 20, 1, bio6));
            foregrounds.push(new Decoration(11, 4, 1, bio19));
            foregrounds.push(new Decoration(35, 6, 1, bio20));
			foregrounds.push(new Decoration(-8, 4, 1, poem3));
			foregrounds.push(new Decoration(51, 8, 1, poem4));
			foregrounds.push(new Decoration(14.5, 6, 1, spacebar));
			receivers.push(new Receiver(18, 11, "red", false, "normal"));
			receivers.push(new Receiver(34, 15, "blue", false, "normal"));
			receivers.push(new Receiver(48, 21, "cyan", false, "normal"));
			receivers.push(new Receiver(53, 21, "magenta", false, "normal"));
			//receivers.push(new Receiver(59, 20, "violet", false, "normal"));
			receivers.push(new Receiver(70, 20, "green", false, "normal"));
			receivers.push(new Receiver(65, 23, "orange", false, "normal"));
			platforms.push(new Platform(9, 14, 3, "red", true, 3, 9, 27, false));
			platforms.push(new Platform(9, 24, 3, "red", true, -2, 14, 25, true));
			platforms.push(new Platform(39, 17, 3, "blue", true, -2, 13, 18, true));
			platforms.push(new Platform(47, 19, 4, "magenta", true, -2, 16, 20, true));
			platforms.push(new Platform(51, 19, 4, "cyan", true, -2, 16, 20, true));
			platforms.push(new Platform(69, 12, 2, "orange", true, -2, 67, 71, false));
			platforms.push(new Platform(61, 17, 2, "orange", true, -2, 15, 18, true));
			//platforms.push(new Platform(63, 19, 2, "orange", true, -1, 18, 20, true));
			platforms.push(new Platform(67, 19, 2, "green", true, 1, 19, 23, true));
			ground.push(new Ground(-19, 9, 16, 20));
			ground.push(new Ground(-3, 13, 8, 20));
			ground.push(new Ground(5, 16, 1, 20));
			ground.push(new Ground(6, 18, 10, 20));
			ground.push(new Ground(16, 13, 5, 20));
			ground.push(new Ground(21, 16, 1, 20));
			ground.push(new Ground(22, 18, 8, 20));
			ground.push(new Ground(30, 13, 6, 20));
			ground.push(new Ground(36, 16, 1, 20));
			ground.push(new Ground(37, 18, 8, 20));
			ground.push(new Ground(45, 13, 2, 20));
			ground.push(new Ground(47, 20, 8, 20));
			ground.push(new Ground(55, 13, 6, 20));
			ground.push(new Ground(61, 18, 6, 20));
			ground.push(new Ground(67, 23, 2, 20));
			ground.push(new Ground(69, 9, 10, 30));
			ground.push(new Ground(79, 11, 3, 30));
			ground.push(new Ground(82, 4, 15, 30));
			foregrounds.push(new Decoration(52, 27.7, 1, bio10));
			//hazards.push(new Hazard(-20, 50, 100, false));
			exit = new Exit(79, 10);
			break;
		case 3:
			backgrounds.push(new Decoration(-15, -20, .5, bg2, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg2, true));
			//family of platforms tutorial
			foregrounds.push(new Decoration(6, 32, 1, bio22));
            foregrounds.push(new Decoration(15, 2, 1, bio23));
            foregrounds.push(new Decoration(47, 18, 1, bio14));
			foregrounds.push(new Decoration(14, 20, 1, poem5));
			foregrounds.push(new Decoration(10, -2, 1, poem6));
			exit = new Exit(23, 7);
			receivers.push(new Receiver(20, 30, "violet", false, "normal"));
			receivers.push(new Receiver(9, 19, "blue", false, "normal"));
			receivers.push(new Receiver(31, 19, "blue", false, "normal"));
			receivers.push(new Receiver(9, 26, "red", false, "normal"));
			receivers.push(new Receiver(31, 26, "red", false, "normal"));
			receivers.push(new Receiver(4, 12, "cyan", false, "normal"));
			receivers.push(new Receiver(36, 10, "cyan", false, "normal"));
			receivers.push(new Receiver(20, 12, "cyan", false, "normal"));
			platforms.push(new Platform(14, 24, 4, "violet", true, 3, 24, 28, true));
			platforms.push(new Platform(23, 24, 4, "violet", true, 3, 24, 28, true));
			platforms.push(new Platform(6, 13, 4, "blue", true, 2, 13, 17, true));
			platforms.push(new Platform(4, 18, 4, "blue", true, 2, 18, 22, true));
			platforms.push(new Platform(31, 13, 4, "blue", true, 2, 13, 17, true));
			platforms.push(new Platform(33, 18, 4, "blue", true, 2, 18, 22, true));
			platforms.push(new Platform(-2, 19, 4, "red", true, -5, 12, 20, true));
			platforms.push(new Platform(39, 19, 4, "red", true, -5, 12, 20, true));
			//right
			platforms.push(new Platform(22, 14, 4, "cyan", true, 2, 22, 30, false));
			//left
			platforms.push(new Platform(15, 14, 4, "cyan", true, -2, 11, 19, false));
			//center
			platforms.push(new Platform(18, 6, 5, "cyan", true, 4, 6, 15, true));
			ground.push(new Ground(-5, 30, 10, 20));
			//left side
			ground.push(new Ground(8, 24, 6, 16));
			ground.push(new Ground(5, 27, 3, 13));
			ground.push(new Ground(-8, 16, 3, 25));
			ground.push(new Ground(-28, 0, 20, 55));
			
			ground.push(new Ground(14, 30, 13, 10));
			//right side
			ground.push(new Ground(27, 24, 6, 16));
			ground.push(new Ground(33, 27, 3, 13));
			ground.push(new Ground(36, 30, 10, 10));
			ground.push(new Ground(46, 16, 3, 25));
			ground.push(new Ground(49, 0, 20, 55));
			hazards.push(new Hazard(-40, 40, 120, "none", false));
			break;
		case 4:
			backgrounds.push(new Decoration(-15, -20, .3, bg2, true));
			backgrounds.push(new Decoration(-18, -20, .2, mg2, true));
			//hazard tutorial
			foregrounds.push(new Decoration(-14, 25, 1, bio21));
            foregrounds.push(new Decoration(60, 4, 1, bio13));
            foregrounds.push(new Decoration(110, 2, 1, bio15));
			foregrounds.push(new Decoration(17, 9, 1, poem7));
			foregrounds.push(new Decoration(97, -5, 1, poem8));
			ground.push(new Ground(-22, 16, 16, 40));
			ground.push(new Ground(-6, 20, 6, 35));
			ground.push(new Ground(0, 24, 6, 31));
			ground.push(new Ground(6, 20, 5, 35));
			ground.push(new Ground(11, 24, 4, 31));
			ground.push(new Ground(15, 20, 2, 35));
			ground.push(new Ground(17, 24, 4, 31));
			ground.push(new Ground(21, 20, 2, 35));
			ground.push(new Ground(23, 24, 4, 31));
			ground.push(new Ground(27, 20, 15, 35));
			ground.push(new Ground(42, 23, 10, 31));
			ground.push(new Ground(52, 12, 6, 43));
			ground.push(new Ground(83, 12, 18, 43));
			ground.push(new Ground(101, 0, 30, 65));
			ground.push(new Ground(131, -6, 20, 70));
			receivers.push(new Receiver(33, 14, "red", false, "normal"));
			receivers.push(new Receiver(53, 14, "red", false, "normal"));
			receivers.push(new Receiver(57, 8, "cyan", false, "normal"));
			receivers.push(new Receiver(100, 7, "violet", false, "normal"));
			platforms.push(new Platform(32, 17, 4, "red", true, 4, 32, 52, false));
			platforms.push(new Platform(48, 14, 4, "blue", true, 0, 48, 52, false));
			platforms.push(new Platform(66, 12, 4, "cyan", true, -1, 61, 70, false));
			platforms.push(new Platform(68, 11, 4, "cyan", true, 1, 68, 77, false));
			platforms.push(new Platform(95, 9, 4, "violet", true, -3, 84, 99, false));
			platforms.push(new Platform(84, 6, 4, "violet", true, 3, 84, 99, false));
			platforms.push(new Platform(95, 3, 4, "violet", true, -3, 84, 99, false));
			hazards.push(new Hazard(0, 23, 6, "none", false));
			hazards.push(new Hazard(11, 23, 4, "none", false));
			hazards.push(new Hazard(17, 23, 4, "none", false));
			hazards.push(new Hazard(23, 23, 4, "none", false));
			hazards.push(new Hazard(58, 13, 25, "none", false));
			hazards.push(new Hazard(-25, 40, 125, "none", false));
            checkpoints.push(new Checkpoint(55, 12, 12));
            checkpoints.push(new Checkpoint(16, 20, 12));
			exit = new Exit(128, -1);
			break;
		case 5:
			backgrounds.push(new Decoration(-15, -20, .5, bg1, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg1, true));
            foregrounds.push(new Decoration(32, 10, 1, bio25));
			exit = new Exit(92, 14);
			receivers.push(new Receiver(19, 15, "red", false, "normal"));
			receivers.push(new Receiver(53, 20, "blue", false, "normal"));
			receivers.push(new Receiver(55, 15, "green", false, "normal"));
			receivers.push(new Receiver(63, 21, "orange", false, "normal"));
			receivers.push(new Receiver(78, 5, "orange", false, "normal"));
			receivers.push(new Receiver(1, 37, "cyan", false, "normal"));
			platforms.push(new Platform(-3, 39, 3, "cyan", true, -2, 21, 40, true));
			platforms.push(new Platform(15, 11, 3, "red", true, 3, 11, 17, true));
			platforms.push(new Platform(49, 7, 6, "blue", true, 6, 7, 12, true));
			platforms.push(new Platform(49, 14, 4, "green", true, 2, 14, 17, true));
			platforms.push(new Platform(62, 19, 3, "orange", true, -5, 12, 20, true));
			platforms.push(new Platform(81, 14, 3, "orange", true, 5, 14, 22, true));

			ground.push(new Ground(0, 22, 8, 30));
			ground.push(new Ground(8, 19, 10, 35));
			ground.push(new Ground(18, 10, 10, 25));
			ground.push(new Ground(28, 19, 27, 15));
			ground.push(new Ground(55, 12, 6, 15));
			ground.push(new Ground(72, 12, 3, 15));
			ground.push(new Ground(86, 12, 6, 15));
			ground.push(new Ground(65, 0, 20, 6));
			ground.push(new Ground(92, 15, 3, 10));
			ground.push(new Ground(95, 8, 25, 20));
			hazards.push(new Hazard(61, 20, 11, "none", false));
			hazards.push(new Hazard(75, 20, 11, "none", false));
			hazards.push(new Hazard(-35, 50, 130, "none", false));

			foregrounds.push(new Decoration(-12 + oneOffsetX, -134 + oneOffsetY, 1, title));
            //foregrounds.push(new Decoration(0, 18, 1, stagedec2, true));
            //foregrounds.push(new Decoration(4, 18, 1, stagedec2, true));
            foregrounds.push(new Decoration(0, 21, 1, stagedec1, true));
            foregrounds.push(new Decoration(4, 21, 1, stagedec1, true));
            foregrounds.push(new Decoration(18, 9, 1, stagedec1, true));
            foregrounds.push(new Decoration(24, 9, 1, stagedec1, true));
            //foregrounds.push(new Decoration(21, 6, 1, stagedec2, true));
            //foregrounds.push(new Decoration(28, 15, 1, stagedec2, true));
            //foregrounds.push(new Decoration(36, 15, 1, stagedec2, true));
            //foregrounds.push(new Decoration(43, 15, 1, stagedec2, true));
            //foregrounds.push(new Decoration(51, 15, 1, stagedec2, true));
            
            checkpoints.push(new Checkpoint(58, 12, 12));
			break;
		case 6:
			backgrounds.push(new Decoration(-15, -20, .5, bg1, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg1, true));
            foregrounds.push(new Decoration(58, -3, 1, bio24));
			exit = new Exit(89, 12);
			receivers.push(new Receiver(5, 20, "green", false, "normal"));
			receivers.push(new Receiver(6, 20, "red", false, "normal"));
			receivers.push(new Receiver(24, 20, "red", false, "normal"));
			receivers.push(new Receiver(11, 7, "cyan", false, "normal"));
			receivers.push(new Receiver(48, 13, "magenta", false, "normal"));
			receivers.push(new Receiver(55, 13, "magenta", false, "normal"));
			receivers.push(new Receiver(48, 21, "blue", false, "normal"));
			receivers.push(new Receiver(76, 13, "orange", false, "normal"));
			platforms.push(new Platform(7, 20, 4, "green", true, 1, 6, 13, false));
			platforms.push(new Platform(18, 19, 7, "red", true, -3, 11, 20, true));
			platforms.push(new Platform(12, 8, 3, "cyan", true, 4, 11, 30, false));
			platforms.push(new Platform(53, 22, 3, "magenta", true, 3, 52, 62, false));
			platforms.push(new Platform(48, 22, 2, "blue", true, -3, 14, 23, true));
			platforms.push(new Platform(70, 17, 5, "orange", true, -3, 10, 18, true));
			platforms.push(new Platform(77, 11, 5, "orange", true, 3, 10, 18, true));
			ground.push(new Ground(0, 22, 3, 9));
			ground.push(new Ground(3, 21, 4, 10));
			ground.push(new Ground(29, 20, 4, 10));
			ground.push(new Ground(33, 10, 7, 20));
			ground.push(new Ground(40, 12, 4, 18));
			ground.push(new Ground(44, 14, 4, 16));
			ground.push(new Ground(64, 22, 2, 8));
			ground.push(new Ground(66, 20, 3, 10));
			ground.push(new Ground(84, 10, 5, 20));
			ground.push(new Ground(89, 13, 3, 20));
			ground.push(new Ground(92, 6, 25, 25));
			hazards.push(new Hazard(-30, 40, 130, "none", false));
            checkpoints.push(new Checkpoint(37, 10, 12));
            checkpoints.push(new Checkpoint(68, 20, 12));
			break;
		case -1:
			backgrounds.push(new Decoration(-15, -20, .5, bg1, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg1, true));
			exit = new Exit(43, 5);
			receivers.push(new Receiver(11, 47, "red", false, "normal"));
			receivers.push(new Receiver(12, 41, "cyan", false, "normal"));
			receivers.push(new Receiver(12, 36, "orange", false, "normal"));
			receivers.push(new Receiver(7, 25, "magenta", false, "normal"));
			receivers.push(new Receiver(23, 27, "magenta", false, "normal"));
			receivers.push(new Receiver(34, 29, "green", false, "normal"));
			receivers.push(new Receiver(26, 9, "goldenrod", false, "normal"));
			platforms.push(new Platform(8, 48, 3, "red", true, -3, 43, 49, true));
			platforms.push(new Platform(21, 40, 3, "cyan", true, -3, 14, 24, false));
			platforms.push(new Platform(24, 37, 3, "orange", true, -3, 8, 27, false));
			platforms.push(new Platform(4, 26, 2, "orange", true, 2, 25, 38, true));
			platforms.push(new Platform(10, 26, 4, "magenta", true, 2.3, 9, 22, false));
			platforms.push(new Platform(25, 31, 3, "magenta", true, -1.3, 26, 32, true));
			//changed
			platforms.push(new Platform(9, 15, 4, "magenta", true, 3, 14, 27, true));
			platforms.push(new Platform(16, 1, 4, "green", true, 3, 0, 12, true));
			platforms.push(new Platform(23, 19, 3, "green", true, -3, 8, 20, true));
			platforms.push(new Platform(30, 30, 5, "goldenrod", true, -9, 5, 31, true));
			ground.push(new Ground(0, 50, 5, 10));
			ground.push(new Ground(5, 52, 3, 8));
			ground.push(new Ground(8, 55, 28, 5));
			ground.push(new Ground(36, 3, 7, 57));
			hazards.push(new Hazard(-30, 70, 115, "none", false));
			break;
		case 7:
			//tutorial
			backgrounds.push(new Decoration(-15, -20, .5, bg1, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg1, true));
            foregrounds.push(new Decoration(47, 10, 1, bio12));
			ground.push(new Ground(0, 30, 90, 15));
			ground.push(new Ground(57, 21, 4, 10));
			ground.push(new Ground(70, 21, 5, 10));
			ground.push(new Ground(75, 0, 20, 31));
			receivers.push(new Receiver(8, 30, "blue", false, "normal"));
			receivers.push(new Receiver(17, 30, "red", false, "normal"));
			receivers.push(new Receiver(27, 20, "cyan", false, "normal"));
			//receivers.push(new Receiver(11, 16, "blue", false, "normal"));
			//receivers.push(new Receiver(18, 16, "red", false, "normal"));
			//receivers.push(new Receiver(27, 16, "cyan", false, "normal"));
			receivers.push(new Receiver(43, 30, "violet", false, "normal"));
			receivers.push(new Receiver(47, 15, "orange", false, "normal"));
			receivers.push(new Receiver(70, 22, "magenta", false, "normal"));
			platforms.push(new Platform(19, 27, 3, "red", true, 5, 19, 30, false));
			platforms.push(new Platform(24, 25, 3, "red", true, 5, 24, 35, false));
			platforms.push(new Platform(44, 29, 3, "violet", true, -4, 15, 30, true));
			platforms.push(new Platform(50, 29, 3, "orange", true, -4, 18, 30, true));
			platforms.push(new Platform(61, 21, 3, "orange", true, 4, 21, 28, true));
			hazards.push(new Hazard(11, 17, 13, "blue", true));
			hazards.push(new Hazard(18, 17, 13, "red", true));
			hazards.push(new Hazard(27, 17, 13, "cyan", true));
			hazards.push(new Hazard(47, 16, 14, "orange", true));
			hazards.push(new Hazard(47, 22, 23, "magenta", false));
			hazards.push(new Hazard(-30, 45, 100, "none", false));
            checkpoints.push(new Checkpoint(36, 30, 12));
			exit = new Exit(67, 29);
			break;
		case 8:
            backgrounds.push(new Decoration(-15, -20, .3, bg3, true));
			backgrounds.push(new Decoration(-15, -20, .5, csmg1, true));
            backgrounds.push(new Decoration(-15, -20, .6, csmg2, true));
            backgrounds.push(new Decoration(-15, -20, .7, csmg3, true));
            foregrounds.push(new Decoration(22, 52, 1, bio7));
			//Krishna's continuous platform tutorial (near the end)
			receivers.push(new Receiver(11, 40, "red", false, "normal"));
			receivers.push(new Receiver(24, 33, "blue", false, "normal"));
			receivers.push(new Receiver(21, 22, "orange", false, "normal"));
			receivers.push(new Receiver(-1, 24, "magenta", false, "normal"));
			receivers.push(new Receiver(21, 16, "cyan", false, "normal"));
			receivers.push(new Receiver(28, 43, "green", true, "normal"));
			receivers.push(new Receiver(44, 34, "goldenrod", true, "normal"));
			platforms.push(new Platform(6, 40, 4, "red", true, -4, 29, 41, true));
			platforms.push(new Platform(15, 26, 5, "orange", true, -5, 1, 20, false));
			platforms.push(new Platform(10, 0, 3, "magenta", true, 8.99, 0, 24, true));
			platforms.push(new Platform(17, 0, 3, "magenta", true, 8, 0, 21, true));
			platforms.push(new Platform(25, 31, 3, "blue", true, 3, 30, 45, true));
			//platforms.push(new Platform(35, 30, 4, "green", false, 3, 29, 45, true));
			platforms.push(new Platform(43, 36, 3, "green", false, -5, 31, 46, false));
			platforms.push(new Platform(31, 39, 3, "green", false, 5, 31, 46, false));
			platforms.push(new Platform(28, 42, 3, "green", false, 5, 28, 43, false));
			platforms.push(new Platform(50, 24, 3, "goldenrod", false, 5, 25, 35, true));
			platforms.push(new Platform(55, 34, 3, "goldenrod", false, -5, 25, 35, true));
			ground.push(new Ground(0, 42, 6, 18));
			ground.push(new Ground(10, 32, 15, 30));
			ground.push(new Ground(25, 45, 5, 17));
			ground.push(new Ground(30, 48, 3, 14));
			ground.push(new Ground(33, 50, 10, 15));
			ground.push(new Ground(20, 0, 3, 24));
			ground.push(new Ground(43, 33, 5, 30));
			hazards.push(new Hazard(24, 20, 12, "cyan", true));
			hazards.push(new Hazard(28, 31, 16, "goldenrod", false));
			hazards.push(new Hazard(43, 22, 10, "goldenrod", true));
			hazards.push(new Hazard(-30, 60, 130, "none", false));
			checkpoints.push(new Checkpoint(46, 33, 12));
			exit = new Exit(60, 28);
			break;
		case 9:
			backgrounds.push(new Decoration(-15, -20, .3, bg3, true));
			backgrounds.push(new Decoration(-15, -20, .5, csmg1, true));
            backgrounds.push(new Decoration(-15, -20, .6, csmg2, true));
            backgrounds.push(new Decoration(-15, -20, .7, csmg3, true));
            //foregrounds.push(new Decoration(15, -5, 1, bio26));
			exit = new Exit(41, 30);
			receivers.push(new Receiver(25, 28, "red", false, "normal"));
			receivers.push(new Receiver(0, 11, "goldenrod", false, "normal"));
			receivers.push(new Receiver(25, 22, "green", false, "normal"));
			receivers.push(new Receiver(12, 15, "green", false, "normal"));
			receivers.push(new Receiver(14, 8, "orange", false, "normal"));
			platforms.push(new Platform(25, 27, 4, "red", true, -3, 21, 29, false));
			platforms.push(new Platform(21, 24, 4, "red", true, -3, 17, 25, false));
			platforms.push(new Platform(15, 10, 5, "goldenrod", false, 7, 2, 22, false));
			platforms.push(new Platform(25, 21, 4, "green", true, -3, 21, 29, false));
			platforms.push(new Platform(21, 18, 4, "green", true, -3, 17, 25, false));
			platforms.push(new Platform(0, 13, 3, "green", true, 6.3, 0, 12, false));
			platforms.push(new Platform(24, 5, 4, "orange", false, -3, 16, 28, false));
			platforms.push(new Platform(28, 7, 4, "orange", false, 6, 28, 40, false));
			ground.push(new Ground(0, 30, 45, 5));
			ground.push(new Ground(12, 15, 8, 12));
			ground.push(new Ground(26, 10, 14, 21));
			//ground.push(new Ground(13, 14, 3, 1));
			ground.push(new Ground(13, 7, 3, 2));
			ground.push(new Ground(46, 10, 9, 17));
			ground.push(new Ground(45, 33, 3, 16));
			//ground.push(new Ground(48, 29, 8, 18));
			hazards.push(new Hazard(14, 9, 6, "green", true));
			hazards.push(new Hazard(25, 9, 16, "none", false));
			hazards.push(new Hazard(45, 9, 10, "none", false));
			hazards.push(new Hazard(40, 10, 20, "none", true));
			hazards.push(new Hazard(45, 10, 16, "none", true));
			hazards.push(new Hazard(20, 16, 10, "none", true));
			hazards.push(new Hazard(25, 10, 21, "none", true));
			hazards.push(new Hazard(-15, 40, 90, "none", false));
            //checkpoints.push(new Checkpoint(16, 15, 7));
            checkpoints.push(new Checkpoint(15, 7, 12));
			break;
		case 10:
			backgrounds.push(new Decoration(-15, -20, .3, bg3, true));
			backgrounds.push(new Decoration(-15, -20, .5, csmg1, true));
            backgrounds.push(new Decoration(-15, -20, .6, csmg2, true));
            backgrounds.push(new Decoration(-15, -20, .7, csmg3, true));
            //foregrounds.push(new Decoration(20, 56, 1, bio7));
			exit = new Exit(39, 19);
			receivers.push(new Receiver(35, 15, "red", false, "normal"));
			receivers.push(new Receiver(36, 15, "green", false, "normal"));
			receivers.push(new Receiver(52, 31, "green", false, "normal"));
			receivers.push(new Receiver(44, 15, "blue", false, "normal"));
			receivers.push(new Receiver(51, -1, "violet", false, "normal"));
			receivers.push(new Receiver(-100, -100, "cyan", true, "normal"));
			platforms.push(new Platform(24, 12, 4, "red", false, 3, 24, 34, false));
			platforms.push(new Platform(2, 25, 8, "cyan", false, 8, 2, 39, false));
			platforms.push(new Platform(24, 0, 3, "blue", true, 3, 0, 10, true));
			platforms.push(new Platform(57, 12, 4, "blue", true, -3, 48, 61, false));
			platforms.push(new Platform(54, 22, 8, "blue", true, -6, 36, 62, false));
			platforms.push(new Platform(55, 3, 4, "blue", true, 4, 3, 11, true));
			platforms.push(new Platform(10, 6, 4, "violet", true, 3, 10, 23, false));
			platforms.push(new Platform(2, 12, 4, "violet", true, 2, 2, 13, false));
			platforms.push(new Platform(-3, 16, 4, "violet", true, 2, -3, 5, false));
			ground.push(new Ground(35, 15, 10, 1));
			//ground.push(new Ground(38, 19, 4, 1));
			ground.push(new Ground(50, 2, 3, 1));
			ground.push(new Ground(55, 4, 4, 1));
			ground.push(new Ground(60, 7, 4, 1));
			ground.push(new Ground(9, 15, 4, 1));
			//hazards.push(new Hazard(0, 32, 62, "none", false));
			hazards.push(new Hazard(51, 3, 27, "green", true));
			hazards.push(new Hazard(13, 15, 22, "none", false));
			hazards.push(new Hazard(45, 15, 40, "none", false));
			hazards.push(new Hazard(-15, 32, 130, "none", false));
			break;
		case 11:
			//Krishna's force switch (binary) tutorial
			backgrounds.push(new Decoration(-15, -20, .3, bg3, true));
			backgrounds.push(new Decoration(-15, -20, .5, csmg1, true));
            backgrounds.push(new Decoration(-15, -20, .6, csmg2, true));
            backgrounds.push(new Decoration(-15, -20, .7, csmg3, true));
            foregrounds.push(new Decoration(5, -8, 1, bio8));
			foregrounds.push(new Decoration(40.5, 12, 1, spacebar_cross));
			receivers.push(new Receiver(-30, 4, "magenta", true, "normal"));
			receivers.push(new Receiver(17, 35, "red", false, "normal"));
			receivers.push(new Receiver(31, 29, "orange", true, "normal"));
			receivers.push(new Receiver(3, 13, "cyan", false, "normal"));
			receivers.push(new Receiver(44, 29, "violet", false, "normal"));
			receivers.push(new Receiver(39, 19, "violet", false, "force"));
			receivers.push(new Receiver(49, 19, "blue", false, "force"));
			platforms.push(new Platform(8, 27, 4, "orange", false, 4, 8, 37, false));
			platforms.push(new Platform(16, 27, 3, "magenta", false, 4, 3, 28, true));
			platforms.push(new Platform(5, 15, 5, "blue", true, 5, 21, 22, false));
			platforms.push(new Platform(40, 28, 9, "violet", true, -3, 20, 29, true));
			platforms.push(new Platform(51, 20, 9, "blue", true, 3, 20, 29, true));
			hazards.push(new Hazard(14, 4, 8, "cyan", false));
			hazards.push(new Hazard(13, 33, 15, "cyan", false));
			hazards.push(new Hazard(28, 20, 10, "red", true));
			hazards.push(new Hazard(-15, 60, 130, "none", false));
			ground.push(new Ground(-20, -6, 20, 66));
			ground.push(new Ground(0, 0, 5, 60));
			ground.push(new Ground(5, 30, 6, 30));
			ground.push(new Ground(11, 32, 2, 28));
			ground.push(new Ground(13, 34, 15, 26));
			ground.push(new Ground(28, 30, 10, 30));
			ground.push(new Ground(38, 32, 25, 25));
			checkpoints.push(new Checkpoint(32, 30, 20));
			exit = new Exit(60, 19);
			break;
		case 12:
			//krishna force switch continuation
			backgrounds.push(new Decoration(-15, -20, .5, bg4, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg4, true));
            foregrounds.push(new Decoration(25, 20, 1, bio27));
            foregrounds.push(new Decoration(60, 48, 1, bio11));
			//receivers.push(new Receiver(5, 42, "blue", true, "normal"));
			receivers.push(new Receiver(-5, 0, "violet", true, "normal"));
			receivers.push(new Receiver(8, 41, "blue", false, "normal"));
			receivers.push(new Receiver(35, 26, "blue", false, "normal"));
			receivers.push(new Receiver(35, 35, "blue", false, "force"));
			platforms.push(new Platform(20, 38, 3, "blue", true, -6, 10, 24, false));
			platforms.push(new Platform(15, 36, 4, "violet", false, 4, 15, 30, false));
			hazards.push(new Hazard(10, 42, 20, "violet", false));
			hazards.push(new Hazard(35, 24, 10, "blue", true));
			ground.push(new Ground(0, 40, 10, 20));
			ground.push(new Ground(30, 34, 10, 26));
			ground.push(new Ground(38, 32, 2, 3));
			//exit = new Platform(70, 40, 2, "gray", false, 2, 12, 18, true);
			receivers.push(new Receiver(54, 29, "orange", false, "normal"));
			receivers.push(new Receiver(60, 26, "orange", false, "force"));
			receivers.push(new Receiver(62, 42, "cyan", false, "force"));
			receivers.push(new Receiver(72, 40, "red", false, "normal"));
			receivers.push(new Receiver(68, 30, "green", false, "normal"));
			receivers.push(new Receiver(93, 30, "magenta", false, "force"));
			platforms.push(new Platform(62, 27, 5, "orange", true, -3, 60, 70, false));
			platforms.push(new Platform(58, 40, 10, "cyan", true, 3, 55, 72, false));
			platforms.push(new Platform(76, 37, 3, "red", false, -4, 75, 88, false));
			platforms.push(new Platform(76, 34, 3, "red", false, 4, 75, 88, false));
			platforms.push(new Platform(68, 31, 7, "green", false, 3, 67, 95, false));
			platforms.push(new Platform(98, 34, 3, "magenta", true, 3, 97, 110, false));
			platforms.push(new Platform(101, 36, 3, "magenta", true, 3, 100, 113, false));
			platforms.push(new Platform(104, 38, 3, "magenta", true, 3, 103, 115, false));
			ground.push(new Ground(40, 30, 15, 20));
			ground.push(new Ground(108, 40, 10, 20));
			hazards.push(new Hazard(-30, 60, 180, "none", false));
            checkpoints.push(new Checkpoint(45, 30, 12));
			exit = new Exit(115, 39);
			break;
		case 13:
			backgrounds.push(new Decoration(-15, -20, .5, bg4, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg4, true));
            foregrounds.push(new Decoration(10, 0, 1, bio28));
            foregrounds.push(new Decoration(30, -8, 1, bio29));
			exit = new Exit(50, 4);
			receivers.push(new Receiver(1, 26, "magenta", false, "normal"));
			receivers.push(new Receiver(15, 25, "goldenrod", false, "force"));
			receivers.push(new Receiver(3, 5, "cyan", false, "normal"));
			receivers.push(new Receiver(3, 14, "goldenrod", false, "normal"));
			receivers.push(new Receiver(24, 24, "cyan", false, "force"));
			receivers.push(new Receiver(27, 32, "red", false, "normal"));
			receivers.push(new Receiver(46, 32, "red", false, "normal"));
			platforms.push(new Platform(3, 29, 3, "magenta", true, 3, 3, 24, false));
			platforms.push(new Platform(9, 26, 5, "goldenrod", true, -3, 9, 27, true));
			platforms.push(new Platform(5, 6, 3, "cyan", true, 3, 5, 15, true));
			platforms.push(new Platform(40, 4, 5, "red", true, 8, 3, 33, true));
			ground.push(new Ground(-5, 0, 8, 42));
			ground.push(new Ground(3, 31, 7, 12));
			ground.push(new Ground(10, 32, 2, 11));
			ground.push(new Ground(12, 33, 25, 10));
			ground.push(new Ground(16, 25, 3, 1));
			ground.push(new Ground(18, 17, 3, 1));
			ground.push(new Ground(21, 10, 8, 1));
			ground.push(new Ground(29, 17, 3, 1));
			ground.push(new Ground(31, 25, 3, 1));
			//ground.push(new Ground(38, 35, 6, 10));
			ground.push(new Ground(45, 5, 8, 40));
			hazards.push(new Hazard(17, 26, 7, "red", true));
			hazards.push(new Hazard(19, 18, 7, "red", true));
			hazards.push(new Hazard(21, 11, 22, "cyan", true));
			hazards.push(new Hazard(22, 11, 22, "cyan", true));
			hazards.push(new Hazard(23, 11, 22, "cyan", true));
			hazards.push(new Hazard(24, 11, 22, "cyan", true));
			hazards.push(new Hazard(25, 11, 22, "cyan", true));
			hazards.push(new Hazard(26, 11, 22, "cyan", true));
			hazards.push(new Hazard(27, 11, 22, "cyan", true));
			hazards.push(new Hazard(28, 11, 22, "cyan", true));
			hazards.push(new Hazard(30, 18, 7, "cyan", true));
			hazards.push(new Hazard(32, 26, 7, "red", true));
			hazards.push(new Hazard(37, 38, 8, "none", false));
			break;
		case 14:
			//chase
			backgrounds.push(new Decoration(-15, -20, .5, bg4, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg4, true));
			exit = new Exit(-4, 20);
			receivers.push(new Receiver(41, -8, "violet", false, "normal"));
			receivers.push(new Receiver(21, 19, "cyan", false, "force"));
			receivers.push(new Receiver(30, 12, "cyan", false, "force"));
			receivers.push(new Receiver(14, 22, "blue", false, "normal"));
			receivers.push(new Receiver(41, 20, "red", false, "normal"));
			receivers.push(new Receiver(41, 2, "red", false, "normal"));
			platforms.push(new Platform(2, 15, 2, "violet", false, 2, 12, 18, true));
			platforms.push(new Platform(14, 16, 4, "cyan", true, 2, 12, 32, false));
			platforms.push(new Platform(32, 16, 4, "red", true, 4, 32, 52, false));
			platforms.push(new Platform(12, 21, 3, "blue", false, 2, 8, 40, false));
			platforms.push(new Platform(28, 21, 3, "blue", false, 2, 26, 58, false));
			platforms.push(new Platform(13, 6, 5, "blue", false, 4, 12, 32, false));
			platforms.push(new Platform(48, 18, 3, "red", true, -4, 32, 51, false));
			platforms.push(new Platform(36, 13, 2, "red", true, -4, -3, 14, true));
			foregrounds.push(new Decoration(23, -14, 1, bio17));
            foregrounds.push(new Decoration(12, 8, 1, bio30));
			ground.push(new Ground(0, 20, 8, 12));
			ground.push(new Ground(8, 24, 12, 12));
			ground.push(new Ground(20, 18, 6, 12));
			ground.push(new Ground(41, 10, 5, 14));
			ground.push(new Ground(40, -10, 5, 14));
			ground.push(new Ground(26, 23, 24, 12));
			hazards.push(new Hazard(0, 5, 15, "violet", true));
			hazards.push(new Hazard(8, 23, 12, "none", false));
			hazards.push(new Hazard(29, 11, 5, "none", true));
			hazards.push(new Hazard(26, 22, 14, "none", false));
			hazards.push(new Hazard(44, 3, 7, "none", true));
			hazards.push(new Hazard(40, 10, 14, "none", true));
            checkpoints.push(new Checkpoint(42, 10, 12));
			break;
		case 15:
			//fast one
			backgrounds.push(new Decoration(-15, -20, .5, bg4, true));
			backgrounds.push(new Decoration(-15, -20, .7, mg4, true));
            foregrounds.push(new Decoration(-12, 6, 1, bio1));
            foregrounds.push(new Decoration(4, 7, 1, bio9));
			//hard fast level
			receivers.push(new Receiver(9, 20, "red", false, "normal"));
			receivers.push(new Receiver(33, 9, "violet", false, "normal"));
			receivers.push(new Receiver(37, 7, "violet", false, "normal"));
			//receivers.push(new Receiver(37, 24, "violet", false, "normal"));
			receivers.push(new Receiver(64, 13, "orange", false, "force"));
			receivers.push(new Receiver(67, 13, "orange", false, "force"));
			receivers.push(new Receiver(70, 13, "orange", false, "force"));
			receivers.push(new Receiver(73, 13, "orange", false, "force"));
			receivers.push(new Receiver(99, 15, "cyan", true, "normal"));
			receivers.push(new Receiver(90, 17, "goldenrod", true, "force"));
			receivers.push(new Receiver(90, 19, "goldenrod", true, "force"));
			receivers.push(new Receiver(90, 21, "goldenrod", true, "force"));
			receivers.push(new Receiver(90, 23, "goldenrod", true, "force"));
			//last section
			receivers.push(new Receiver(45, 26, "magenta", true, "force"));
			receivers.push(new Receiver(37, 26, "magenta", true, "force"));
			receivers.push(new Receiver(29, 26, "magenta", true, "force"));
			receivers.push(new Receiver(21, 26, "magenta", true, "force"));
			//
			platforms.push(new Platform(1, 15, 4, "red", true, 5, 1, 100, false));
			platforms.push(new Platform(76, 14, 3, "orange", true, -10, 36, 79, false));
			platforms.push(new Platform(99, 14, 3, "orange", true, -10, 36, 102, false));
			platforms.push(new Platform(85, 16, 4, "cyan", false, 6, 16, 26, true));
			platforms.push(new Platform(94, 28, 6, "goldenrod", true, -5, 1, 100, false));
			//last section
			platforms.push(new Platform(40, 34, 3, "magenta", true, -8, 21, 35, true));
			platforms.push(new Platform(34, 34, 3, "magenta", true, -8, 21, 35, true));
			platforms.push(new Platform(27, 34, 3, "magenta", true, -8, 21, 35, true));
			platforms.push(new Platform(20, 34, 3, "magenta", true, -8, 21, 35, true));
			//
			ground.push(new Ground(7, 18, 5, 1));
			ground.push(new Ground(19, 13, 4, 1));
			ground.push(new Ground(36, 7, 3, 1));
			hazards.push(new Hazard(9, 10, 5, "none", true));
			hazards.push(new Hazard(19, 14, 8, "none", true));
			hazards.push(new Hazard(37, 8, 14, "violet", true));
			hazards.push(new Hazard(48, 13, 3, "none", true));
			hazards.push(new Hazard(54, 13, 3, "none", true));
			hazards.push(new Hazard(60, 13, 3, "none", true));
			hazards.push(new Hazard(-10, 20, 90, "none", false));
			hazards.push(new Hazard(94, -10, 30, "none", true));
			hazards.push(new Hazard(85, 24, 6, "none", false));
			hazards.push(new Hazard(65, 22.9, 3, "none", true));
			hazards.push(new Hazard(61, 26, 3, "none", true));
			hazards.push(new Hazard(57, 22.9, 3, "none", true));
			hazards.push(new Hazard(53, 26, 3, "none", true));
			hazards.push(new Hazard(-15, 32, 130, "none", false));
			exit = new Exit(-2, 29);
			break;
		case 0:
			backgrounds.push(new Decoration(-15, -20, .5, bg2, true));
			backgrounds.push(new Decoration(-15, -20, .4, mg2, true));
			backgrounds.push(new Decoration(32, 6, .5, names));
			//foregrounds.push(new Decoration(8, 22, 1, bio5));
			//foregrounds.push(new Decoration(82, 24, 1, bio6));
			foregrounds.push(new Decoration(52, 24, 1, quote1));
			ground.push(new Ground(-25, 15, 30, 35));
			ground.push(new Ground(5, 20, 98, 40));
			exit = new Exit(103, 22);
			break;
	}
}